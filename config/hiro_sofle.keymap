#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;     // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &trans  &kp N6   &kp N7  &kp N8     &kp N9    &kp N0     &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R   &kp T      &trans  &kp Y    &kp U   &kp I      &kp O     &kp P      &kp BSPC
&kp ESC    &kp A      &kp S     &kp D     &kp F   &kp G      &trans  &kp H    &kp J   &kp K      &kp L     &kp SEMI   &kp APOS
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V   &kp B      &trans  &kp N    &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT
&trans     &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE  &trans  &kp RET  &mo 2   &kp RGUI   &kp RALT  &kp RCTRL
            >;

            display-name = "Base";
            sensor-bindings = <&scroll_encoder>;
        };

        symbols_layer {
            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4    &kp F5    &kp F6    &trans  &kp F7     &kp F8    &kp F9    &kp F10    &kp F11   &kp F12
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5    &trans  &kp N6     &kp N7    &kp N8    &kp N9     &kp N0    &trans
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT &trans  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR   &kp RPAR  &kp PIPE
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC  &trans  &kp LBKT   &kp RBKT  &kp SEMI  &kp COLON  &kp BSLH  &trans
&trans  &trans     &trans     &trans    &trans    &trans    &trans  &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "Sym";
            sensor-bindings = <&scroll_encoder>;
        };

        mods_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp C_PREV       &kp C_PP         &kp C_NEXT       &kp C_MUTE       &kp C_VOL_DN     &kp C_VOL_UP
&trans      &trans        &trans        &trans        &trans        &bt BT_CLR_ALL  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &kp DEL
&kp CLCK    &trans        &trans        &trans        &trans        &trans          &trans  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &trans           &kp PSCRN
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans          &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;

            display-name = "Mod";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
